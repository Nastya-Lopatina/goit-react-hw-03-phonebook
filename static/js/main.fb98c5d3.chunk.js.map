{"version":3,"sources":["components/ СontactForm.js","components/ContactList.js","components/Filter.js","App.js","index.js","styles/ContactForm..module.css","styles/ContactList.module.css"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","AddContact","className","style","form","onSubmit","this","label","input","type","onChange","button","Component","ContactList","contacts","onDeleteContact","list","map","id","list_name","onClick","Filter","App","filter","addContact","search","contact","includes","alert","length","uuidv4","changeFilter","getVisibleContacts","toLowerCase","deleteContact","contactId","localStorage","getItem","parsedContacs","JSON","parse","console","log","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fb98c5d3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport style from '../styles/ContactForm..module.css'\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n      }\n\nhandleChange =(e) => {\n    const {name,value} = e.target;\n    this.setState({[name]: value,})\n};\n\nhandleSubmit = (e) => {\n    e.preventDefault();\n    \n    this.props.AddContact(this.state);\n    this.setState({name: '', number: ''});\n};\n\n\nrender(){\n    \n    return (\n        <form className={style.form} onSubmit = {this.handleSubmit}>\n            <label className ={style.label}>\n                Name\n               <input\n               className = {style.input }\n                type = \"text\"\n                name = \"name\"\n                value = {this.state.name}\n                onChange = {this.handleChange}\n                />\n            </label>\n            <label className ={style.label}>\n                Number\n               <input\n               className = {style.input }\n                type = \"text\"\n                name = \"number\"\n                value = {this.state.number}\n                onChange = {this.handleChange}\n                />\n            </label>\n            <button className = {style.button} type=\"submit\">\n            Добавить контакт\n          </button>\n        </form>\n    )\n}\n\n    }\n\n    ContactForm.propTypes = {\n        AddContact: PropTypes.func.isRequired,\n      };\n\nexport default ContactForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from '../styles/ContactList.module.css'\n\nconst ContactList = ({contacts,onDeleteContact}) => (\n    <ul className = {style.list}>\n        {contacts.map(({name,number,id}) => (\n        <li\n        className = {style.list_name}\n         key = {id}>\n            {name + ':' + number}\n            \n            {<button\n                className = {style.button}\n                type = 'button'\n                name = 'delete'\n                onClick = {() => onDeleteContact(id) }>\n                    Удалить\n            </button>\n            }\n           \n        </li>\n          \n         ))}\n     \n    </ul>\n)\n\nContactList.propTypes = {\n    onDeleteContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired,\n        })\n    )\n}\n\nexport default ContactList;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Filter ({value,onChange}){\n    return(\n        <div>\n           Поиск контактов по имени\n           <input\n           type = 'text'\n           value ={value}\n           onChange = {(e) => onChange(e.target.value)}/>\n        </div>\n    )\n}\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n}\n\nexport default Filter","import React, { Component } from 'react';\nimport ContactForm from './components/ СontactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport {v4 as uuidv4} from 'uuid';\n\n\nclass App extends Component{\n  state = {\n    contacts: [],\n    filter: '',\n  }\n\n  addContact = (search) => {\n    const searchName = this.state.contacts\n    .map((contact) => contact.name)\n    .includes(search.name);\n\n    if(searchName) {\n      alert (`${search.name} уже есть в контактах`);\n\n    } else if (search.name.length === 0) {\n      alert(`Поля обязательны для заполнения!`);\n\n    } else {\n      const contact = {\n        ...search,\n        id: uuidv4(),\n            };\n\n      this.setState(({contacts}) => ({\n        contacts: [...contacts,contact],\n      }));\n    }\n\n};\n\n changeFilter = (filter) => {\nthis.setState({filter});\n\n};\n\n getVisibleContacts = () => {\n  const {contacts,filter} = this.state;\n  return contacts.filter((contacts)=> contacts.name.toLowerCase().includes(filter.toLowerCase())) \n};\n\n deleteContact = (contactId) =>{\n  this.setState(({contacts}) => ({\n    contacts: contacts.filter(contact => contact.id !== contactId)\n  }))\n};\n\ncomponentDidMount(){\n  const contacts = localStorage.getItem('contacts');\n  const parsedContacs = JSON.parse(contacts);\n  if (parsedContacs) {\n    this.setState({ contacts : parsedContacs });\n \n  }\n  console.log(contacts)\n}\n\ncomponentDidUpdate(prevProps,prevState){\n if( this.state.contacts !== prevState.contacts){\n  localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n  }\n}\n\n\nrender(){\n  const {contacts, filter} = this.state;\n  return(\n  <div>\n      <h1>Phonebook</h1>\n      <ContactForm AddContact = {this.addContact}/>\n\n      <h2>Contacts</h2>\n      {contacts.length > 1 && (\n        <Filter value = {filter} onChange = {this.changeFilter} />\n      )}\n      {contacts.length > 0 && (\n        <ContactList \n        contacts = {this.getVisibleContacts()}\n        onDeleteContact = {this.deleteContact}/>\n      ) }\n\n  </div>\n\n  )\n}\n\n}\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm__form__3fu15\",\"label\":\"ContactForm__label__czKiJ\",\"input\":\"ContactForm__input__2ksW3\",\"button\":\"ContactForm__button__Dl2ri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3I7bH\",\"list_name\":\"ContactList_list_name__152z0\",\"button\":\"ContactList_button__36Xig\"};"],"sourceRoot":""}